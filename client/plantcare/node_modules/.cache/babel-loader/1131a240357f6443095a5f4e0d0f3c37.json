{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/search/search.js\";\n\n/* eslint-disable require-jsdoc */\nimport React, { Component } from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport plant_herb from '../../images/herb.png';\nimport plant_bush from '../../images/bush.png';\nimport plant_tree from '../../images/tree.png';\nimport drops from '../../images/drops.png';\nimport plsize from '../../images/plsize.png';\nimport winterImg from '../../images/Winter.png';\nimport fallImg from '../../images/Fall.png';\nimport summerImg from '../../images/Summer.png';\nimport springImg from '../../images/Spring.png';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.imageBodyTemplate = rowData => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"img-plant\",\n        src: rowData.image,\n        onError: e => e.target.src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png',\n        alt: \"\",\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.setActiveDropsImage = active_drops => {\n      const nrows = [];\n      const remaning_days = 3 - active_drops;\n\n      for (var i = 0; i < active_drops; i++) {\n        nrows.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: drops,\n          alt: \"drops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }, this));\n      }\n\n      for (i = 0; i < remaning_days; i++) {\n        nrows.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: drops,\n          alt: \"drops\",\n          style: {\n            'opacity': '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 18\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image_card\",\n        children: nrows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.setActivePlantSizeImage = plant_size => {\n      const nrows = [];\n      const remaning_size = 3 - plant_size;\n\n      for (var i = 0; i < plant_size; i++) {\n        nrows.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plsize,\n          alt: \"plt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 18\n        }, this));\n      }\n\n      for (i = 0; i < remaning_size; i++) {\n        nrows.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plsize,\n          alt: \"plt\",\n          style: {\n            'opacity': '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 18\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image_card\",\n        children: nrows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.setSeasonImage = season_type => {\n      const season_name = season_type;\n      console.log('sesson: ', season_name);\n\n      switch (season_name) {\n        case 'Winter':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: winterImg,\n              alt: \"winter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this);\n\n        case 'Fall':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fallImg,\n              alt: \"fall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n\n        case 'Summer':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: summerImg,\n              alt: \"summer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image_card\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: springImg,\n              alt: \"spring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this);\n      }\n    };\n\n    this.rowPlantDescription = rowData => {\n      console.log('rowPlantDescription', rowData);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plant_card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plant_name\",\n          children: [rowData.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"plant_desc\",\n          children: rowData.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plant_req\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watering_card\",\n            children: [this.setActivePlantSizeImage(rowData.plant_type), this.setActiveDropsImage(rowData.water_schedule), this.setSeasonImage(rowData.season_type)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onClickSearchButton = e => {\n      e.preventDefault();\n\n      if (this.state.plantName === '' && this.state.plantType === null && this.state.season === null && this.state.location === null) {\n        alert('No Options Selected');\n        return;\n      }\n\n      this.searchData = {\n        name: this.state.plantName,\n        type: this.state.plantType ? this.state.plantType.name : '',\n        season: this.state.season ? this.state.season.name : '',\n        location: this.state.location ? this.state.location.name : ''\n      };\n      console.log('this.searchData', this.searchData);\n      const request = new Request('http://localhost:4000/search/', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify(this.searchData)\n      });\n      const that = this;\n      this._plantInfo = [];\n      fetch(request).then(function (response) {\n        response.json().then(function (res) {\n          res.data.forEach(row => {\n            // console.log(row)\n            that._plantInfo.push({\n              code: row.plant_id,\n              desc: row.description,\n              name: row.name,\n              image: row.image,\n              plant_type: row.plant_type_id,\n              season_type: row.season_type,\n              location_name: row.state_name,\n              water_schedule: row.water_schedule\n            });\n          });\n          that.setState({\n            plantData: that._plantInfo\n          });\n          console.log('final:', that.state.plantData);\n        }).catch(err => {\n          console.log('In catch1: ' + err.message);\n          that.setState({\n            plantData: null\n          });\n        });\n      }).catch(function (err) {\n        console.log('In catch2: ' + err.message);\n        that.setState({\n          plantData: null\n        });\n      });\n    };\n\n    this.onClickDefault = e => {\n      e.preventDefault();\n      this.setState({\n        season: '',\n        plantType: '',\n        plantName: '',\n        location: '',\n        plantData: null\n      });\n    };\n\n    this.state = {\n      plantName: '',\n      plantData: [],\n      selectedPlants: null,\n      plantType: null,\n      season: null,\n      location: null,\n      layout: 'grid',\n      first: 0,\n      rows: 5\n    };\n    this._plantdata = [{\n      code: 1,\n      desc: 'Native to the rainforests in Brazil, the Christmas cactus is a popular, low maintenance houseplant and a favorite pass-along plant that can live for years. Although the Christmas cactus is a true cactus, it is of the tropical variety and is used to growing as an epiphyte off tree branches in areas of heavy moisture and high humidity. With a few tricks, you can easily get this tropical plant to blossom year after year indoors.',\n      name: 'Christmas Cactus',\n      image: 'https://www.gardeningknowhow.com/wp-content/uploads/2021/11/christmas-cactus-1.jpg',\n      plant_size: 2,\n      water_schedule: 3,\n      plant_type: 1\n    }, {\n      code: 2,\n      desc: 'Winter aconite grows and blooms best in a spot that receives full sun (at least 6 or so hours of direct light per day in early spring). Because its growth starts so early in the season, this spring-blooming bulb can be planted beneath deciduous trees such as maples and oaks. By the time the trees leaf out, winter aconite has already put on its show and is getting ready to rest. Once the plant goes dormant in early spring, its foliage disappears until the following year.',\n      name: 'Winter Aconite',\n      image: 'https://h2.commercev3.net/www.dutchgardens.com/images/400/85234.jpg',\n      plant_size: 2,\n      water_schedule: 1,\n      plant_type: 2\n    }];\n    this.plantTypeOptions = [{\n      name: 'Herb',\n      id: 'pl-12',\n      image: plant_herb\n    }, {\n      name: 'Shrub',\n      id: 'pl-13',\n      image: plant_bush\n    }, {\n      name: 'Tree',\n      id: 'pl-14',\n      image: plant_tree\n    }];\n    this.season = [{\n      name: 'Winter',\n      code: 'win1'\n    }, {\n      name: 'Fall',\n      code: 'fal1'\n    }, {\n      name: 'Spring',\n      code: 'sp1'\n    }, {\n      name: 'Summer',\n      code: 'sum1'\n    }];\n    this.location = [{\n      name: 'New York',\n      code: 'NY'\n    }, {\n      name: 'California',\n      code: 'CA'\n    }, {\n      name: 'Texas',\n      code: 'TA'\n    }, {\n      name: 'New Jersey',\n      code: 'NJ'\n    }, {\n      name: 'Florida',\n      code: 'FL'\n    }, {\n      name: 'Georgia',\n      code: 'GA'\n    }];\n    this.onCustomPage = this.onCustomPage.bind(this);\n    this.onPlantTypeChange = this.onPlantTypeChange.bind(this);\n    this.onSeasonChange = this.onSeasonChange.bind(this);\n    this.onLocationChange = this.onLocationChange.bind(this);\n    this.onClickSearchButton = this.onClickSearchButton.bind(this);\n    this.onClickDefault = this.onClickDefault.bind(this);\n    this.rowPlantDescription = this.rowPlantDescription.bind(this);\n    this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      plantData: this._plantdata\n    });\n  }\n\n  typeOptionTemplate(option) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: option.name,\n        src: option.image,\n        style: {\n          'width': '2em'\n        },\n        className: `flag flag-${option.id.toLowerCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  selectedTypeTemplate(option, props) {\n    if (option) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-item country-item-value\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: option.name,\n          src: option.image,\n          style: {\n            'width': '2em'\n          },\n          className: `flag flag-${option.id.toLowerCase()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n  onPlantTypeChange(e) {\n    this.setState({\n      plantType: e.value\n    });\n  }\n\n  onSeasonChange(e) {\n    this.setState({\n      season: e.value\n    });\n  }\n\n  onLocationChange(e) {\n    this.setState({\n      location: e.value\n    });\n  }\n\n  onCustomPage(event) {\n    this.setState({\n      first: event.first,\n      rows: event.rows,\n      currentPage: event.page + 1\n    });\n  }\n\n  render() {\n    const footer = `Total ${this.state.plantData ? this.state.plantData.length : 0} plants found.`;\n    const template1 = {\n      'layout': 'PrevPageLink PageLinks NextPageLink',\n      'PrevPageLink': options => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: options.className,\n          onClick: options.onClick,\n          disabled: options.disabled,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-3\",\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this);\n      },\n      'NextPageLink': options => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: options.className,\n          onClick: options.onClick,\n          disabled: options.disabled,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-3\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this);\n      },\n      'PageLinks': options => {\n        if (options.view.startPage === options.page && options.view.startPage !== 0 || options.view.endPage === options.page && options.page + 1 !== options.totalPages) {\n          const className = className(options.className, {\n            'p-disabled': true\n          });\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: className,\n            style: {\n              userSelect: 'none'\n            },\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 18\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: options.className,\n          onClick: options.onClick,\n          children: options.page + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_top_container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 md:col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-inputgroup\",\n                children: [/*#__PURE__*/_jsxDEV(InputText, {\n                  placeholder: \"My dream plants is ..\",\n                  value: this.state.plantName,\n                  onChange: e => this.setState({\n                    plantName: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  icon: \"pi pi-search\",\n                  className: \"p-button-warning\",\n                  onClick: this.onClickSearchButton\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"button_default\",\n                  label: \"Default Settings\",\n                  onClick: this.onClickDefault\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown_cont\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                id: \"drop-2\",\n                placeholder: \"Select Plant Type\",\n                value: this.state.plantType,\n                options: this.plantTypeOptions,\n                onChange: this.onPlantTypeChange,\n                optionLabel: \"name\",\n                valueTemplate: this.selectedTypeTemplate,\n                itemTemplate: this.typeOptionTemplate,\n                children: \"Plant Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                id: \"drop-3\",\n                placeholder: \"Select Seasons\",\n                value: this.state.season,\n                options: this.season,\n                onChange: this.onSeasonChange,\n                optionLabel: \"name\",\n                children: \"Seasons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                id: \"drop-4\",\n                placeholder: \"Select Location\",\n                value: this.state.location,\n                options: this.location,\n                onChange: this.onLocationChange,\n                optionLabel: \"name\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result_cards\",\n            children: [/*#__PURE__*/_jsxDEV(DataTable, {\n              value: this.state.plantData,\n              footer: footer,\n              responsiveLayout: \"scroll\",\n              selection: this.state.selectedPlants,\n              onSelectionChange: e => this.setState({\n                selectedPlants: e.value\n              }),\n              paginator: true,\n              paginatorTemplate: template1,\n              first: this.state.first,\n              rows: this.state.rows,\n              onPage: this.onCustomPage,\n              children: [/*#__PURE__*/_jsxDEV(Column, {\n                body: this.imageBodyTemplate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                body: this.rowPlantDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                selectionMode: \"multiple\",\n                headerStyle: {\n                  width: '10em'\n                },\n                exportable: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"planner_btn_card\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"planner_btn\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"planner-link\",\n                  to: {\n                    pathname: '/Planner',\n                    state: this.state.selectedPlants\n                  },\n                  children: \"Add To Planner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/search/search.js"],"names":["React","Component","Link","plant_herb","plant_bush","plant_tree","drops","plsize","winterImg","fallImg","summerImg","springImg","Button","InputText","Dropdown","DataTable","Column","Footer","Search","constructor","props","imageBodyTemplate","rowData","image","e","target","src","setActiveDropsImage","active_drops","nrows","remaning_days","i","push","setActivePlantSizeImage","plant_size","remaning_size","setSeasonImage","season_type","season_name","console","log","rowPlantDescription","name","desc","plant_type","water_schedule","onClickSearchButton","preventDefault","state","plantName","plantType","season","location","alert","searchData","type","request","Request","method","headers","Headers","body","JSON","stringify","that","_plantInfo","fetch","then","response","json","res","data","forEach","row","code","plant_id","description","plant_type_id","location_name","state_name","setState","plantData","catch","err","message","onClickDefault","selectedPlants","layout","first","rows","_plantdata","plantTypeOptions","id","onCustomPage","bind","onPlantTypeChange","onSeasonChange","onLocationChange","componentDidMount","typeOptionTemplate","option","toLowerCase","selectedTypeTemplate","placeholder","value","event","currentPage","page","render","footer","length","template1","options","className","onClick","disabled","view","startPage","endPage","totalPages","userSelect","width","pathname"],"mappings":"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","sourcesContent":["/* eslint-disable require-jsdoc */\nimport React, {Component} from 'react';\nimport './style.css';\nimport {Link} from 'react-router-dom';\nimport plant_herb from '../../images/herb.png';\nimport plant_bush from '../../images/bush.png';\nimport plant_tree from '../../images/tree.png';\nimport drops from '../../images/drops.png';\nimport plsize from '../../images/plsize.png';\nimport winterImg from '../../images/Winter.png';\nimport fallImg from '../../images/Fall.png';\nimport summerImg from '../../images/Summer.png';\nimport springImg from '../../images/Spring.png';\n\nimport {Button} from 'primereact/button';\nimport {InputText} from 'primereact/inputtext';\nimport {Dropdown} from 'primereact/dropdown';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport Footer from '../Footer/Footer';\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      plantName: '',\n      plantData: [],\n      selectedPlants: null,\n      plantType: null,\n      season: null,\n      location: null,\n      layout: 'grid',\n      first: 0,\n      rows: 5,\n    };\n    this._plantdata = [\n      {code: 1, desc: 'Native to the rainforests in Brazil, the Christmas cactus is a popular, low maintenance houseplant and a favorite pass-along plant that can live for years. Although the Christmas cactus is a true cactus, it is of the tropical variety and is used to growing as an epiphyte off tree branches in areas of heavy moisture and high humidity. With a few tricks, you can easily get this tropical plant to blossom year after year indoors.',\n        name: 'Christmas Cactus', image: 'https://www.gardeningknowhow.com/wp-content/uploads/2021/11/christmas-cactus-1.jpg', plant_size: 2, water_schedule: 3, plant_type: 1},\n      {code: 2, desc: 'Winter aconite grows and blooms best in a spot that receives full sun (at least 6 or so hours of direct light per day in early spring). Because its growth starts so early in the season, this spring-blooming bulb can be planted beneath deciduous trees such as maples and oaks. By the time the trees leaf out, winter aconite has already put on its show and is getting ready to rest. Once the plant goes dormant in early spring, its foliage disappears until the following year.',\n        name: 'Winter Aconite', image: 'https://h2.commercev3.net/www.dutchgardens.com/images/400/85234.jpg', plant_size: 2, water_schedule: 1, plant_type: 2},\n    ];\n    this.plantTypeOptions = [\n      {name: 'Herb', id: 'pl-12', image: plant_herb},\n      {name: 'Shrub', id: 'pl-13', image: plant_bush},\n      {name: 'Tree', id: 'pl-14', image: plant_tree},\n    ];\n    this.season=[\n      {name: 'Winter', code: 'win1'},\n      {name: 'Fall', code: 'fal1'},\n      {name: 'Spring', code: 'sp1'},\n      {name: 'Summer', code: 'sum1'},\n    ];\n    this.location=[\n      {name: 'New York', code: 'NY'},\n      {name: 'California', code: 'CA'},\n      {name: 'Texas', code: 'TA'},\n      {name: 'New Jersey', code: 'NJ'},\n      {name: 'Florida', code: 'FL'},\n      {name: 'Georgia', code: 'GA'},\n    ];\n\n    this.onCustomPage = this.onCustomPage.bind(this);\n    this.onPlantTypeChange = this.onPlantTypeChange.bind(this);\n    this.onSeasonChange = this.onSeasonChange.bind(this);\n    this.onLocationChange = this.onLocationChange.bind(this);\n    this.onClickSearchButton = this.onClickSearchButton.bind(this);\n    this.onClickDefault = this.onClickDefault.bind(this);\n    this.rowPlantDescription = this.rowPlantDescription.bind(this);\n    this.imageBodyTemplate = this.imageBodyTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({plantData: this._plantdata});\n  }\n\n  typeOptionTemplate(option) {\n    return (\n      <div className=\"country-item\">\n        <img alt={option.name} src={option.image} style={{'width': '2em'}} className={`flag flag-${option.id.toLowerCase()}`} />\n        <div>{option.name}</div>\n      </div>\n    );\n  }\n  selectedTypeTemplate(option, props) {\n    if (option) {\n      return (\n        <div className=\"country-item country-item-value\">\n          <img alt={option.name} src={option.image} style={{'width': '2em'}} className={`flag flag-${option.id.toLowerCase()}`} />\n          <div>{option.name}</div>\n        </div>\n      );\n    }\n\n    return (\n      <span>\n        {props.placeholder}\n      </span>\n    );\n  }\n\n  onPlantTypeChange(e) {\n    this.setState({plantType: e.value});\n  }\n\n  onSeasonChange(e) {\n    this.setState({season: e.value});\n  }\n\n  onLocationChange(e) {\n    this.setState({location: e.value});\n  }\n\n  onCustomPage(event) {\n    this.setState({\n      first: event.first,\n      rows: event.rows,\n      currentPage: event.page + 1,\n    });\n  }\n  imageBodyTemplate=(rowData)=>{\n    return (<img id='img-plant'src={rowData.image}\n      onError={(e) => e.target.src='https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png'}\n      alt=\"\" className=\"product-image\" />);\n  };\n\n  setActiveDropsImage=(active_drops)=>{\n    const nrows = [];\n    const remaning_days = 3 - active_drops;\n    for (var i = 0; i < active_drops; i++) {\n      nrows.push(<img src={drops} alt='drops' />);\n    }\n    for (i = 0; i < remaning_days; i++) {\n      nrows.push(<img src={drops} alt='drops' style={{'opacity': '50%'}} />);\n    }\n    return (<div className='image_card'>{nrows}</div>);\n  };\n  setActivePlantSizeImage=(plant_size)=>{\n    const nrows = [];\n    const remaning_size = 3 - plant_size;\n    for (var i = 0; i < plant_size; i++) {\n      nrows.push(<img src={plsize} alt='plt'/>);\n    }\n    for (i = 0; i < remaning_size; i++) {\n      nrows.push(<img src={plsize} alt='plt' style={{'opacity': '50%'}} />);\n    }\n    return (<div className='image_card'>{nrows}</div>);\n  };\n  setSeasonImage=(season_type) =>{\n    const season_name = season_type;\n    console.log('sesson: ', season_name);\n    switch (season_name) {\n      case 'Winter':\n        return (<div className='image_card'><img src={winterImg} alt='winter'/></div>);\n      case 'Fall':\n        return (<div className='image_card'><img src={fallImg} alt='fall'/></div>);\n      case 'Summer':\n        return (<div className='image_card'><img src={summerImg} alt='summer'/></div>);\n      default:\n        return (<div className='image_card'><img src={springImg} alt='spring'/></div>);\n    }\n  };\n\n  rowPlantDescription=(rowData)=>{\n    console.log('rowPlantDescription', rowData);\n    return (\n      <div className='plant_card'>\n        <div className='plant_name'>{rowData.name} </div>\n        <p className='plant_desc'>{rowData.desc}</p>\n        <div className='plant_req'>\n          {/* <Watercard plant_size={rowData.plant_type} number_of_drops={rowData.water_schedule} season_type={rowData.season_type}   /> */}\n          <div className='watering_card'>\n            {this.setActivePlantSizeImage(rowData.plant_type)}\n            {this.setActiveDropsImage(rowData.water_schedule)}\n            {this.setSeasonImage(rowData.season_type)}\n          </div>\n        </div>\n\n      </div>\n    );\n  };\n\n  onClickSearchButton =(e)=>{\n    e.preventDefault();\n\n    if (this.state.plantName === '' && this.state.plantType === null && this.state.season === null && this.state.location === null) {\n      alert('No Options Selected');\n      return;\n    }\n    this.searchData = {\n      name: this.state.plantName,\n      type: this.state.plantType ? this.state.plantType.name: '',\n      season: this.state.season ? this.state.season.name: '',\n      location: this.state.location ? this.state.location.name: '',\n    };\n\n    console.log('this.searchData', this.searchData);\n    const request = new Request('http://localhost:4000/search/', {\n      method: 'POST',\n      headers: new Headers({'Content-Type': 'application/json'}),\n      body: JSON.stringify(this.searchData),\n    });\n    const that = this;\n    this._plantInfo =[];\n    fetch(request)\n        .then(function(response) {\n          response.json().then(function(res) {\n            res.data.forEach((row) => {\n              // console.log(row)\n              that._plantInfo.push({code: row.plant_id,\n                desc: row.description,\n                name: row.name,\n                image: row.image,\n                plant_type: row.plant_type_id,\n                season_type: row.season_type,\n                location_name: row.state_name,\n                water_schedule: row.water_schedule,\n              });\n            });\n            that.setState({plantData: that._plantInfo});\n            console.log('final:', that.state.plantData);\n          })\n              .catch((err)=>{\n                console.log('In catch1: '+ err.message);\n                that.setState({plantData: null});\n              });\n        })\n        .catch(function(err) {\n          console.log('In catch2: ' + err.message);\n          that.setState({plantData: null});\n        });\n  };\n  onClickDefault = (e)=>{\n    e.preventDefault();\n    this.setState({\n      season: '',\n      plantType: '',\n      plantName: '',\n      location: '',\n      plantData: null,\n    });\n  };\n\n  render() {\n    const footer = `Total ${this.state.plantData ? this.state.plantData.length : 0} plants found.`;\n    const template1 = {\n      'layout': 'PrevPageLink PageLinks NextPageLink',\n      'PrevPageLink': (options) => {\n        return (\n          <button type=\"button\" className={options.className} onClick={options.onClick} disabled={options.disabled}>\n            <span className=\"p-3\">Prev</span>\n          </button>\n        );\n      },\n      'NextPageLink': (options) => {\n        return (\n          <button type=\"button\" className={options.className} onClick={options.onClick} disabled={options.disabled}>\n            <span className=\"p-3\">Next</span>\n          </button>\n        );\n      },\n      'PageLinks': (options) => {\n        if ((options.view.startPage === options.page && options.view.startPage !== 0) || (options.view.endPage === options.page && options.page + 1 !== options.totalPages)) {\n          const className = className(options.className, {'p-disabled': true});\n\n          return <span className={className} style={{userSelect: 'none'}}>...</span>;\n        }\n\n        return (\n          <button type=\"button\" className={options.className} onClick={options.onClick}>\n            {options.page + 1}\n          </button>\n        );\n      },\n    };\n    return (\n      <div>\n        <div className='dashboard_container'>\n          <div className='dashboard_top_container'>\n            <div className='search_container'>\n              <div className=\"col-12 md:col-4\">\n                <div className=\"p-inputgroup\">\n                  <InputText placeholder=\"My dream plants is ..\" value={this.state.plantName} onChange={(e) => this.setState({plantName: e.target.value})}/>\n                  <Button icon=\"pi pi-search\" className=\"p-button-warning\" onClick={this.onClickSearchButton}/>\n                  <Button id=\"button_default\" label=\"Default Settings\" onClick={this.onClickDefault}/>\n\n                </div>\n              </div>\n              <div className=\"dropdown_cont\">\n                <Dropdown id='drop-2' placeholder='Select Plant Type'\n                  value={this.state.plantType}\n                  options={this.plantTypeOptions}\n                  onChange={this.onPlantTypeChange}\n                  optionLabel=\"name\"\n                  valueTemplate={this.selectedTypeTemplate}\n                  itemTemplate={this.typeOptionTemplate}\n                >Plant Type</Dropdown>\n\n                <Dropdown id='drop-3' placeholder='Select Seasons'\n                  value={this.state.season}\n                  options={this.season}\n                  onChange={this.onSeasonChange}\n                  optionLabel=\"name\">Seasons</Dropdown>\n\n                <Dropdown id='drop-4' placeholder='Select Location'\n                  value={this.state.location}\n                  options={this.location}\n                  onChange={this.onLocationChange}\n                  optionLabel=\"name\">Location</Dropdown>\n              </div>\n            </div>\n          </div>\n          <div className='result_container'>\n            <p>Results</p>\n            <div className='result_cards'>\n              <DataTable value={this.state.plantData} footer={footer} responsiveLayout=\"scroll\"\n                selection={this.state.selectedPlants}\n                onSelectionChange={(e) => this.setState({selectedPlants: e.value})}\n                paginator paginatorTemplate={template1} first={this.state.first} rows={this.state.rows} onPage={this.onCustomPage}>\n                <Column body={this.imageBodyTemplate}></Column>\n                <Column body={this.rowPlantDescription}></Column>\n                <Column selectionMode=\"multiple\" headerStyle={{width: '10em'}} exportable={false}></Column>\n              </DataTable>\n              <div className='planner_btn_card'>\n                <Button className='planner_btn'>\n                  <Link className='planner-link' to={{\n                    pathname: '/Planner',\n                    state: this.state.selectedPlants}}>Add To Planner\n                  </Link>\n                </Button>\n              </div>\n\n            </div>\n\n          </div>\n          <Footer/>\n        </div>\n\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}