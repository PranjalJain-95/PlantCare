{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/forgotpassword/forgotpassword.js\";\n\n/* eslint-disable require-jsdoc */\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport { InputText } from 'primereact/inputtext';\nimport { Toast } from 'primereact/toast';\nimport { Password } from 'primereact/password';\nimport Button from '../../components/Button';\nimport logo_reference from '../../images/plantcare.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class forgotpassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEmail: true,\n      showEmailButton: true,\n      showSecurity: false,\n      showResetPass: false,\n      emailAddress: '',\n      securityQuestion: '',\n      securityAnswer: '',\n      pass1: '',\n      pass2: ''\n    };\n    this.clickSubmitEmail = this.clickSubmitEmail.bind(this);\n    this.clickSubmitPass = this.clickSubmitPass.bind(this);\n  }\n\n  clickSubmitEmail() {\n    const data = {\n      email: this.state.emailAddress\n    };\n    console.log('Email is ' + this.state.emailAddress);\n    console.log(data);\n    this.verifyEmail(data);\n  }\n\n  clickSubmitPass() {\n    const data = {\n      email: this.state.emailAddress,\n      password: this.state.pass1,\n      security_answer: this.state.securityAnswer\n    };\n    console.log(data);\n\n    if (!this.state.pass1) {\n      this.showError('Password field cannot be blank');\n      return;\n    }\n\n    if (!this.state.pass2) {\n      this.showError('Verify password field cannot be blank');\n      return;\n    } else if (this.state.pass1 !== this.state.pass2) {\n      this.showError('Passwords doesn\\'t match');\n      return;\n    }\n\n    this.updatePass(data);\n  }\n\n  updatePass(data) {\n    const request = new Request('http://localhost:4000/forgotPassword/resetpass', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    const that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 500) throw new Error('Internal server error');else if (response.status === 401) throw new Error('Security answer is incorrect');else if (response.status === 404) throw new Error('Not found');\n      response.json().then(function (data) {\n        that.showSuccess('Password is updated successfully');\n        console.log(data);\n        that.props.history.push('/Login');\n      }).catch(function (err) {\n        console.log(err.message);\n        that.showError(err.message);\n      });\n    }).catch(function (err) {\n      console.log(err.message);\n      that.showError(err.message);\n    });\n  }\n\n  verifyEmail(data) {\n    const request = new Request('http://localhost:4000/forgotPassword/validate', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    const that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 500) throw new Error('Internal server error');else if (response.status === 401) throw new Error('Email is not registered');\n      response.json().then(function (data) {\n        that.setState({\n          securityQuestion: data.security_question\n        });\n        console.log(that.state.securityQuestion);\n        that.showSuccess('Valid username');\n        that.setState({\n          showSecurity: true\n        });\n        that.setState({\n          showResetPass: true\n        });\n        that.setState({\n          showEmailButton: false\n        });\n        that.setState({\n          showEmail: false\n        });\n      });\n    }).catch(function (err) {\n      console.log(err.message);\n      that.showError(err.message);\n    });\n  }\n\n  showSuccess(message) {\n    this.toast.show({\n      severity: 'success',\n      summary: 'Success Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  showError(message) {\n    this.toast.show({\n      severity: 'error',\n      summary: 'Error Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: el => this.toast = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo_reference,\n          alt: \"Plants\",\n          width: \"170px\",\n          height: \"60px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), this.state.showEmail ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgotpass_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"label_text\",\n            children: \"Enter Your email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"Email\",\n            \"aria-describedby\": \"Email-help\",\n            placeholder: \"Email\",\n            onChange: e => this.setState({\n              emailAddress: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), this.state.showEmailButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot_button_card\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Fogot_btn\",\n              onClick: this.clickSubmitEmail,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 34\n      }, this) : null, this.state.showResetPass ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetpass_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetpass\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"s_question\",\n            className: \"block\",\n            children: this.state.securityQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"security_question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"username\",\n            placeholder: \"Security Answer\",\n            required: true,\n            onChange: e => this.setState({\n              securityAnswer: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            id: \"password\",\n            value: this.state.pass1,\n            placeholder: \"Enter a password\",\n            onChange: e => this.setState({\n              pass1: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            id: \"password\",\n            value: this.state.pass2,\n            placeholder: \"Confirm your password\",\n            onChange: e => this.setState({\n              pass2: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Fogot_btn\",\n            onClick: this.clickSubmitPass,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/forgotpassword/forgotpassword.js"],"names":["React","Component","Fragment","InputText","Toast","Password","Button","logo_reference","forgotpassword","constructor","props","state","showEmail","showEmailButton","showSecurity","showResetPass","emailAddress","securityQuestion","securityAnswer","pass1","pass2","clickSubmitEmail","bind","clickSubmitPass","data","email","console","log","verifyEmail","password","security_answer","showError","updatePass","request","Request","method","headers","Headers","body","JSON","stringify","that","fetch","then","response","status","Error","json","showSuccess","history","push","catch","err","message","setState","security_question","toast","show","severity","summary","detail","life","render","el","e","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable require-jsdoc */\nimport React, {Component, Fragment} from 'react';\nimport './style.css';\n\n\nimport {InputText} from 'primereact/inputtext';\nimport {Toast} from 'primereact/toast';\nimport {Password} from 'primereact/password';\nimport Button from '../../components/Button';\nimport logo_reference from '../../images/plantcare.png';\n\n\nexport default class forgotpassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showEmail: true,\n      showEmailButton: true,\n      showSecurity: false,\n      showResetPass: false,\n      emailAddress: '',\n      securityQuestion: '',\n      securityAnswer: '',\n      pass1: '',\n      pass2: '',\n    };\n\n    this.clickSubmitEmail = this.clickSubmitEmail.bind(this);\n    this.clickSubmitPass = this.clickSubmitPass.bind(this);\n  }\n\n  clickSubmitEmail() {\n    const data = {\n      email: this.state.emailAddress,\n    };\n    console.log('Email is ' + this.state.emailAddress);\n    console.log(data);\n    this.verifyEmail(data);\n  }\n\n  clickSubmitPass() {\n    const data = {\n      email: this.state.emailAddress,\n      password: this.state.pass1,\n      security_answer: this.state.securityAnswer,\n    };\n    console.log(data);\n\n    if (!this.state.pass1) {\n      this.showError('Password field cannot be blank');\n      return;\n    }\n    if (!this.state.pass2) {\n      this.showError('Verify password field cannot be blank');\n      return;\n    } else if (this.state.pass1 !== this.state.pass2) {\n      this.showError('Passwords doesn\\'t match');\n      return;\n    }\n    this.updatePass(data);\n  }\n  updatePass(data) {\n    const request = new Request('http://localhost:4000/forgotPassword/resetpass', {\n      method: 'POST',\n      headers: new Headers({'Content-Type': 'application/json'}),\n      body: JSON.stringify(data),\n    });\n\n    const that = this;\n    fetch(request)\n        .then(function(response) {\n          if (response.status === 500) throw new Error('Internal server error');\n          else if (response.status === 401) throw new Error('Security answer is incorrect');\n          else if (response.status === 404) throw new Error('Not found');\n          response.json().then(function(data) {\n            that.showSuccess('Password is updated successfully');\n            console.log(data);\n            that.props.history.push('/Login');\n          })\n              .catch(function(err) {\n                console.log(err.message);\n                that.showError(err.message);\n              });\n        })\n        .catch(function(err) {\n          console.log(err.message);\n          that.showError(err.message);\n        });\n  }\n\n  verifyEmail(data) {\n    const request = new Request('http://localhost:4000/forgotPassword/validate', {\n      method: 'POST',\n      headers: new Headers({'Content-Type': 'application/json'}),\n      body: JSON.stringify(data),\n    });\n    const that = this;\n    fetch(request)\n        .then(function(response) {\n          if (response.status === 500) throw new Error('Internal server error');\n          else if (response.status === 401) throw new Error('Email is not registered');\n\n          response.json().then(function(data) {\n            that.setState({securityQuestion: data.security_question});\n            console.log(that.state.securityQuestion);\n            that.showSuccess('Valid username');\n            that.setState({showSecurity: true});\n            that.setState({showResetPass: true});\n            that.setState({showEmailButton: false});\n            that.setState({showEmail: false});\n          });\n        })\n        .catch(function(err) {\n          console.log(err.message);\n          that.showError(err.message);\n        });\n  }\n\n\n  showSuccess(message) {\n    this.toast.show({severity: 'success', summary: 'Success Message', detail: message, life: 3000});\n  }\n  showError(message) {\n    this.toast.show({severity: 'error', summary: 'Error Message', detail: message, life: 3000});\n  }\n\n\n  render() {\n    return (\n      <Fragment>\n        <Toast ref={(el) => this.toast = el} />\n        <div className='logo'><img src={logo_reference} alt=\"Plants\" width=\"170px\" height=\"60px\" /></div>\n\n\n        { this.state.showEmail ? <div className=\"forgotpass_container\">\n          <div className=\"image_container\"></div>\n          <div className=\"forgot\">Forgot Password</div>\n          <div className=\"input_container\">\n            <p id='label_text'>Enter Your email address</p>\n            <InputText id=\"Email\" aria-describedby=\"Email-help\"\n              placeholder = \"Email\"\n              onChange={(e) => this.setState({emailAddress: e.target.value})}\n              required/>\n\n            { this.state.showEmailButton ?\n                        <div className='forgot_button_card'>\n                          <Button className='Fogot_btn' onClick={this.clickSubmitEmail}>\n                                Submit\n                          </Button >\n                        </div> : null}\n          </div>\n        </div> :null}\n        { this.state.showResetPass ? <div className=\"resetpass_container\">\n          <div className=\"resetpass\">Reset Password</div>\n          <div className=\"input_container\">\n\n            <label htmlFor=\"s_question\" className=\"block\">{this.state.securityQuestion}</label>\n            <div className=\"security_question\"></div>\n            <InputText\n              id=\"username\"\n              placeholder='Security Answer' required\n              onChange={(e) => this.setState({securityAnswer: e.target.value})}\n            />\n            <label htmlFor=\"password\" className=\"block\">Password</label>\n            <Password\n              id=\"password\"\n              value={this.state.pass1}\n              placeholder='Enter a password'\n              onChange={(e) => this.setState({pass1: e.target.value})} toggleMask\n              required\n            />\n            <div className=\"break\"></div>\n            <label htmlFor=\"password\" className=\"block\">Confirm Password</label>\n            <Password\n              id=\"password\"\n              value={this.state.pass2}\n              placeholder='Confirm your password'\n              onChange={(e) => this.setState({pass2: e.target.value})} toggleMask\n              required\n            />\n            <Button className='Fogot_btn' onClick={this.clickSubmitPass}>\n                            Submit\n            </Button >\n          </div>\n        </div> : null}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}