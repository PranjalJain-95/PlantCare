{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/components/protectedRoute/protectedRoute.js\";\n\n/* eslint-disable require-jsdoc */\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(_ref) {\n  let {\n    component: Component,\n    ...restOfProps\n  } = _ref;\n  const token = localStorage.getItem('token');\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => token ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/components/protectedRoute/protectedRoute.js"],"names":["React","Redirect","Route","ProtectedRoute","component","Component","restOfProps","token","localStorage","getItem","props"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;;;AAEA,SAASC,cAAT,OAAgE;AAAA,MAAxC;AAACC,IAAAA,SAAS,EAAEC,SAAZ;AAAuB,OAAGC;AAA1B,GAAwC;AAC9D,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,sBACE,QAAC,KAAD,OACMH,WADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IACNH,KAAK,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHvC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQP,c;AAYT,eAAeA,cAAf","sourcesContent":["/* eslint-disable require-jsdoc */\nimport React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\nfunction ProtectedRoute({component: Component, ...restOfProps}) {\n  const token = localStorage.getItem('token');\n  return (\n    <Route\n      {...restOfProps}\n      render={(props) =>\n        token ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}