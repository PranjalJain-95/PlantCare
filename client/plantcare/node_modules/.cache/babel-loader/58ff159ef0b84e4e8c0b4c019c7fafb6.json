{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/register/register.js\";\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { Dropdown } from 'primereact/dropdown';\nimport logo_reference from '../../images/plantcare.png'; // let options = useMemo(() => countryList().getData(), []);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      firstname: '',\n      lastname: '',\n      password: '',\n      password2: '',\n      securityQuestion: '',\n      securityAnswer: '',\n      contactNum: ''\n    };\n    this.countrylist = [];\n    this.questions = [{\n      name: 'What is your first school name?',\n      code: 'Q1'\n    }, {\n      name: 'What is your first pet name?',\n      code: 'Q2'\n    }, {\n      name: 'What is your favourite dish?',\n      code: 'Q3'\n    }, {\n      name: 'What is your favourite place?',\n      code: 'Q4'\n    }, {\n      name: 'What is your favourite color?',\n      code: 'Q5'\n    }];\n    this.onSecurityQuestionChange = this.onSecurityQuestionChange.bind(this);\n    this.onclickSubmit = this.onclickSubmit.bind(this);\n    this.showSuccess = this.showSuccess.bind(this);\n    this.showError = this.showError.bind(this);\n  }\n\n  onSecurityQuestionChange(event) {\n    event.preventDefault();\n    console.log(event);\n    this.setState({\n      securityQuestion: event.target.value\n    });\n    return;\n  }\n\n  onclickSubmit(event) {\n    event.preventDefault();\n\n    if (!this.state.email) {\n      this.showError('Email address is blank');\n      return;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\n      this.showError('Email address is invalid');\n      return;\n    }\n\n    if (!this.state.firstname.trim()) {\n      this.showError('Firstname is Blank');\n      return;\n    }\n\n    if (!this.state.lastname.trim()) {\n      this.showError('Lastname is Blank');\n      return;\n    }\n\n    if (!this.state.password) {\n      this.showError('Password is required');\n      return;\n    }\n\n    if (!this.state.password2) {\n      this.showError('Confirm Password is required');\n      return;\n    } else if (this.state.password2 !== this.state.password) {\n      this.showError('Passwords do not match');\n      return;\n    }\n\n    var data = {\n      first_name: this.state.firstname,\n      last_name: this.state.lastname,\n      email: this.state.email,\n      contact_number: this.state.contactNum,\n      password: this.state.password,\n      security_question: this.state.securityQuestion.name,\n      security_answer: this.state.securityAnswer\n    };\n    console.log(data);\n    this.verifyRegistration(data);\n  }\n\n  verifyRegistration(data) {\n    console.log('Verifying user input');\n    var request = new Request('http://localhost:4000/auth/register', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    var that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 500) throw new Error('Internal Server Error');else if (response.status === 401) throw new Error('User already exists.');\n      response.json().then(function (data) {\n        that.showSuccess('Successfully registered');\n        that.props.history.push(\"/Login\");\n      });\n    }).catch(function (err) {\n      console.log(err.message);\n      that.showError(err.message);\n    });\n  }\n\n  showSuccess(message) {\n    this.toast.show({\n      severity: 'success',\n      summary: 'Success Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  showError(message) {\n    this.toast.show({\n      severity: 'error',\n      summary: 'Error Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Toast, {\n          ref: el => this.toast = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo_reference,\n            alt: \"Plants\",\n            width: \"170px\",\n            height: \"60px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"image_container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"register_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container_welcome\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"welcome\",\n              children: \"Register to \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"welcome2\",\n              children: \" PlantCare! \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"no_account\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"l-btn\",\n                href: \"/Login\",\n                children: \"Have an account? Sign in \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"sign_up\",\n            children: \"Sign up \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-float-label\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"form_input\",\n              placeholder: \"Enter your email address\",\n              value: this.state.email,\n              onChange: e => this.setState({\n                email: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"formname\",\n            children: [/*#__PURE__*/_jsxDEV(InputText, {\n              id: \"form_input\",\n              placeholder: \"Firstname\",\n              value: this.state.firstname,\n              onChange: e => this.setState({\n                firstname: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"form_input\",\n              placeholder: \"Lastname\",\n              value: this.state.lastname,\n              onChange: e => this.setState({\n                lastname: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            value: this.state.password,\n            placeholder: \"Enter a password\",\n            onChange: e => this.setState({\n              password: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            value: this.state.password2,\n            placeholder: \"Confirm your password\",\n            onChange: e => this.setState({\n              password2: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"form_input\",\n            placeholder: \"Contact Number\",\n            value: this.state.contactNum,\n            onChange: e => this.setState({\n              contactNum: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            value: this.state.securityQuestion,\n            placeholder: \"Choose a security question\",\n            options: this.questions,\n            onChange: this.onSecurityQuestionChange,\n            optionLabel: \"name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"form_input\",\n            placeholder: \"Your Answer\",\n            value: this.state.securityAnswer,\n            onChange: e => this.setState({\n              securityAnswer: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"button_submit\",\n            label: \"Submit\",\n            className: \"p-button-outlined p-button-success\",\n            onClick: this.onclickSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/register/register.js"],"names":["React","Component","Fragment","InputText","Password","Button","Toast","Dropdown","logo_reference","register","constructor","props","state","email","firstname","lastname","password","password2","securityQuestion","securityAnswer","contactNum","countrylist","questions","name","code","onSecurityQuestionChange","bind","onclickSubmit","showSuccess","showError","event","preventDefault","console","log","setState","target","value","test","trim","data","first_name","last_name","contact_number","security_question","security_answer","verifyRegistration","request","Request","method","headers","Headers","body","JSON","stringify","that","fetch","then","response","status","Error","json","history","push","catch","err","message","toast","show","severity","summary","detail","life","render","el","e"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport './style.css'\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport { Dropdown } from 'primereact/dropdown';\nimport logo_reference from '../../images/plantcare.png'\n\n\n\n// let options = useMemo(() => countryList().getData(), []);\n\nexport default class register extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            firstname: '',\n            lastname: '',\n            password: '',\n            password2: '',\n            securityQuestion: '',\n            securityAnswer: '',\n            contactNum:'',\n\n        };\n        this.countrylist = [];\n        this.questions = [\n            { name: 'What is your first school name?', code: 'Q1' },\n            { name: 'What is your first pet name?', code: 'Q2' },\n            { name: 'What is your favourite dish?', code: 'Q3' },\n            { name: 'What is your favourite place?', code: 'Q4' },\n            { name: 'What is your favourite color?', code: 'Q5' },\n        ]\n\n        this.onSecurityQuestionChange = this.onSecurityQuestionChange.bind(this);\n        this.onclickSubmit = this.onclickSubmit.bind(this);\n        this.showSuccess = this.showSuccess.bind(this);\n        this.showError = this.showError.bind(this);\n\n    }\n    onSecurityQuestionChange(event) {\n        event.preventDefault();\n        console.log(event);\n        this.setState({ securityQuestion: event.target.value })\n        return;\n\n    }\n    onclickSubmit(event) {\n        event.preventDefault();\n\n        if (!this.state.email) {\n            this.showError('Email address is blank');\n            return;\n        } else if (!/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\n            this.showError('Email address is invalid');\n            return;\n        }\n        if (!this.state.firstname.trim()) {\n            this.showError('Firstname is Blank');\n            return;\n        }\n        if (!this.state.lastname.trim()) {\n            this.showError('Lastname is Blank');\n            return;\n        }\n        if (!this.state.password) {\n            this.showError('Password is required');\n            return;\n        }\n        if (!this.state.password2) {\n            this.showError('Confirm Password is required');\n            return;\n        } else if (this.state.password2 !== this.state.password) {\n            this.showError('Passwords do not match');\n            return;\n        }\n\n\n        var data = {\n            \n            first_name: this.state.firstname,\n            last_name: this.state.lastname,\n            email: this.state.email,\n            contact_number: this.state.contactNum,\n            password: this.state.password,\n            security_question: this.state.securityQuestion.name,\n            security_answer: this.state.securityAnswer,\n            \n        };\n        console.log(data);\n        \n        this.verifyRegistration(data);\n    }\n\n    verifyRegistration(data) {\n        console.log('Verifying user input');\n        var request = new Request('http://localhost:4000/auth/register', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n        \n        var that = this;\n        fetch(request)\n            .then(function (response) {\n                if (response.status === 500) throw new Error('Internal Server Error');\n                else if (response.status === 401) throw new Error('User already exists.');\n\n                response.json().then(function (data) {\n                    that.showSuccess('Successfully registered');\n                    that.props.history.push(\"/Login\");\n                });\n            })\n            .catch(function (err) {\n                console.log(err.message);\n                that.showError(err.message);\n            });\n        }\n\n    showSuccess(message) {\n        this.toast.show({ severity: 'success', summary: 'Success Message', detail: message, life: 3000 });\n    }\n    showError(message) {\n        this.toast.show({ severity: 'error', summary: 'Error Message', detail: message, life: 3000 });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Fragment>\n                    <Toast ref={(el) => this.toast = el} />\n                    <div className='logo'><img src={logo_reference} alt=\"Plants\" width=\"170px\" height=\"60px\" /></div>\n                    <div id='image_container'></div>\n                    <div id=\"register_container\">\n                        <div className=\"container_welcome\">\n                            <p id=\"welcome\">Register to </p><p id=\"welcome2\"> PlantCare! </p>\n                            <span id=\"no_account\">\n                                <a className='l-btn' href='/Login'>Have an account? Sign in </a>\n                            </span>\n                        </div>\n                        <h1 id=\"sign_up\">Sign up </h1>\n                        {/* <p id='label_text'>Enter Your username or email address</p> */}\n                        <span className=\"p-float-label\">\n                            <InputText\n                                id=\"form_input\"\n                                placeholder='Enter your email address'\n                                value={this.state.email}\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                required\n                            />\n                        </span>\n                        <div id='formname'>\n                            <InputText id=\"form_input\"\n                                placeholder='Firstname'\n                                value={this.state.firstname}\n                                onChange={(e) => this.setState({ firstname: e.target.value })}\n                                required />\n                            <InputText\n                                id=\"form_input\"\n                                placeholder='Lastname'\n                                value={this.state.lastname}\n                                onChange={(e) => this.setState({ lastname: e.target.value })}\n                                required />\n\n                        </div>\n                        <Password\n                            value={this.state.password}\n                            placeholder='Enter a password'\n                            onChange={(e) => this.setState({ password: e.target.value })} toggleMask\n                            required\n                        />\n                        <Password\n                            value={this.state.password2}\n                            placeholder='Confirm your password'\n                            onChange={(e) => this.setState({ password2: e.target.value })} toggleMask\n                            required\n                        />\n                        <InputText id=\"form_input\"\n                                placeholder='Contact Number'\n                                value={this.state.contactNum}\n                                onChange={(e) => this.setState({ contactNum: e.target.value })}\n                                required />\n                        <Dropdown\n                            value={this.state.securityQuestion}\n                            placeholder='Choose a security question'\n                            options={this.questions}\n                            onChange={this.onSecurityQuestionChange} optionLabel=\"name\"\n                            required\n                        />\n                        <InputText id=\"form_input\"\n                            placeholder='Your Answer'\n                            value={this.state.securityAnswer}\n                            onChange={(e) => this.setState({ securityAnswer: e.target.value })} />\n\n                        {/* <span className=\"p-float-label\"> */}\n                        \n\n                        <Button id=\"button_submit\" label=\"Submit\" className=\"p-button-outlined p-button-success\" onClick={this.onclickSubmit} />\n                    </div>\n                </Fragment>\n\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}