{"ast":null,"code":"var _jsxFileName = \"/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/forgotpassword/forgotpassword.js\";\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport { InputText } from 'primereact/inputtext';\nimport { Toast } from 'primereact/toast';\nimport { Password } from 'primereact/password';\nimport Button from '../../components/Button';\nimport logo_reference from '../../images/plantcare.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class forgotpassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEmail: true,\n      showEmailButton: true,\n      showSecurity: false,\n      showResetPass: false,\n      emailAddress: '',\n      securityQuestion: '',\n      securityAnswer: '',\n      pass1: '',\n      pass2: ''\n    };\n    this.clickSubmitEmail = this.clickSubmitEmail.bind(this);\n    this.clickSubmitPass = this.clickSubmitPass.bind(this);\n  }\n\n  clickSubmitEmail() {\n    var data = {\n      email: this.state.emailAddress\n    };\n    console.log(\"Email is \" + this.state.emailAddress);\n    console.log(data);\n    this.verifyEmail(data);\n  }\n\n  clickSubmitPass() {\n    var data = {\n      email: this.state.emailAddress,\n      password: this.state.pass1,\n      security_answer: this.state.securityAnswer\n    };\n    console.log(data);\n\n    if (!this.state.pass1) {\n      this.showError('Password field cannot be blank');\n      return;\n    }\n\n    if (!this.state.pass2) {\n      this.showError('Verify password field cannot be blank');\n      return;\n    } else if (this.state.pass1 !== this.state.pass2) {\n      this.showError(\"Passwords doesn't match\");\n      return;\n    }\n\n    this.updatePass(data);\n  }\n\n  updatePass(data) {\n    var request = new Request('http://localhost:4000/forgotPassword/resetpass', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    var that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 500) throw new Error('Internal server error');else if (response.status === 401) throw new Error('Security answer is incorrect');else if (response.status === 404) throw new Error('Not found');\n      response.json().then(function (data) {\n        that.showSuccess('Password is updated successfully');\n        console.log(data);\n        that.props.history.push(\"/Login\");\n      }).catch(function (err) {\n        console.log(err.message);\n        that.showError(err.message);\n      });\n    }).catch(function (err) {\n      console.log(err.message);\n      that.showError(err.message);\n    });\n  }\n\n  verifyEmail(data) {\n    var request = new Request('http://localhost:4000/forgotPassword/validate', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(data)\n    });\n    var that = this;\n    fetch(request).then(function (response) {\n      if (response.status === 500) throw new Error('Internal server error');else if (response.status === 401) throw new Error('Email is not registered');\n      response.json().then(function (data) {\n        that.setState({\n          securityQuestion: data.security_question\n        });\n        console.log(that.state.securityQuestion);\n        that.showSuccess('Valid username');\n        that.setState({\n          showSecurity: true\n        });\n        that.setState({\n          showResetPass: true\n        });\n        that.setState({\n          showEmailButton: false\n        });\n        that.setState({\n          showEmail: false\n        });\n      });\n    }).catch(function (err) {\n      console.log(err.message);\n      that.showError(err.message);\n    });\n  }\n\n  showSuccess(message) {\n    this.toast.show({\n      severity: 'success',\n      summary: 'Success Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  showError(message) {\n    this.toast.show({\n      severity: 'error',\n      summary: 'Error Message',\n      detail: message,\n      life: 3000\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: el => this.toast = el\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo_reference,\n          alt: \"Plants\",\n          width: \"170px\",\n          height: \"60px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), this.state.showEmail ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgotpass_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image_container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"label_text\",\n            children: \"Enter Your email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"Email\",\n            \"aria-describedby\": \"Email-help\",\n            placeholder: \"Email\",\n            onChange: e => this.setState({\n              emailAddress: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), this.state.showEmailButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forgot_button_card\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Fogot_btn\",\n              onClick: this.clickSubmitEmail,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 42\n      }, this) : null, this.state.showResetPass ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetpass_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetpass\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"s_question\",\n            className: \"block\",\n            children: this.state.securityQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"security_question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            id: \"username\",\n            placeholder: \"Security Answer\",\n            required: true,\n            onChange: e => this.setState({\n              securityAnswer: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            id: \"password\",\n            value: this.state.pass1,\n            placeholder: \"Enter a password\",\n            onChange: e => this.setState({\n              pass1: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            id: \"password\",\n            value: this.state.pass2,\n            placeholder: \"Confirm your password\",\n            onChange: e => this.setState({\n              pass2: e.target.value\n            }),\n            toggleMask: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"Fogot_btn\",\n            onClick: this.clickSubmitPass,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/pranjal/Documents/GitHub/SoftwareDev/client/plantcare/src/containers/forgotpassword/forgotpassword.js"],"names":["React","Component","Fragment","InputText","Toast","Password","Button","logo_reference","forgotpassword","constructor","props","state","showEmail","showEmailButton","showSecurity","showResetPass","emailAddress","securityQuestion","securityAnswer","pass1","pass2","clickSubmitEmail","bind","clickSubmitPass","data","email","console","log","verifyEmail","password","security_answer","showError","updatePass","request","Request","method","headers","Headers","body","JSON","stringify","that","fetch","then","response","status","Error","json","showSuccess","history","push","catch","err","message","setState","security_question","toast","show","severity","summary","detail","life","render","el","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AAGA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAGA,eAAe,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAElDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,eAAe,EAAE,IAFR;AAGTC,MAAAA,YAAY,EAAE,KAHL;AAITC,MAAAA,aAAa,EAAE,KAJN;AAKTC,MAAAA,YAAY,EAAE,EALL;AAMTC,MAAAA,gBAAgB,EAAE,EANT;AAOTC,MAAAA,cAAc,EAAE,EAPP;AAQTC,MAAAA,KAAK,EAAE,EARE;AASTC,MAAAA,KAAK,EAAE;AATE,KAAb;AAYA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AAEH;;AAEDD,EAAAA,gBAAgB,GAAG;AACf,QAAIG,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWK;AADX,KAAX;AAGAU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAKhB,KAAL,CAAWK,YAArC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAKI,WAAL,CAAiBJ,IAAjB;AACH;;AAEDD,EAAAA,eAAe,GAAG;AACd,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWK,YADX;AAEPa,MAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWQ,KAFd;AAGPW,MAAAA,eAAe,EAAE,KAAKnB,KAAL,CAAWO;AAHrB,KAAX;AAKAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAI,CAAC,KAAKb,KAAL,CAAWQ,KAAhB,EAAuB;AACnB,WAAKY,SAAL,CAAe,gCAAf;AACA;AACH;;AACD,QAAI,CAAC,KAAKpB,KAAL,CAAWS,KAAhB,EAAuB;AACnB,WAAKW,SAAL,CAAe,uCAAf;AACA;AACH,KAHD,MAGO,IAAI,KAAKpB,KAAL,CAAWQ,KAAX,KAAqB,KAAKR,KAAL,CAAWS,KAApC,EAA2C;AAC9C,WAAKW,SAAL,CAAe,yBAAf;AACA;AACH;;AACD,SAAKC,UAAL,CAAgBR,IAAhB;AAEH;;AACDQ,EAAAA,UAAU,CAACR,IAAD,EAAO;AACb,QAAIS,OAAO,GAAG,IAAIC,OAAJ,CAAY,gDAAZ,EAA8D;AACxEC,MAAAA,MAAM,EAAE,MADgE;AAExEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ,CAF+D;AAGxEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,IAAf;AAHkE,KAA9D,CAAd;AAMA,QAAIiB,IAAI,GAAG,IAAX;AACAC,IAAAA,KAAK,CAACT,OAAD,CAAL,CACKU,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN,CAA7B,KACK,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN,CAA7B,KACA,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AAClCF,MAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAUnB,IAAV,EAAgB;AACjCiB,QAAAA,IAAI,CAACO,WAAL,CAAiB,kCAAjB;AACAtB,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAiB,QAAAA,IAAI,CAAC/B,KAAL,CAAWuC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,OAJD,EAKCC,KALD,CAKO,UAAUC,GAAV,EAAe;AAClB1B,QAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,OAAhB;AACAZ,QAAAA,IAAI,CAACV,SAAL,CAAeqB,GAAG,CAACC,OAAnB;AACH,OARD;AASP,KAdD,EAeCF,KAfD,CAeO,UAAUC,GAAV,EAAe;AAClB1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,OAAhB;AACAZ,MAAAA,IAAI,CAACV,SAAL,CAAeqB,GAAG,CAACC,OAAnB;AACH,KAlBD;AAmBH;;AAEDzB,EAAAA,WAAW,CAACJ,IAAD,EAAO;AACV,QAAIS,OAAO,GAAG,IAAIC,OAAJ,CAAY,+CAAZ,EAA6D;AACvEC,MAAAA,MAAM,EAAE,MAD+D;AAEvEC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ,CAF8D;AAGvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,IAAf;AAHiE,KAA7D,CAAd;AAKA,QAAIiB,IAAI,GAAG,IAAX;AACAC,IAAAA,KAAK,CAACT,OAAD,CAAL,CACKU,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN,CAA7B,KACK,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AAElCF,MAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAUnB,IAAV,EAAgB;AACjCiB,QAAAA,IAAI,CAACa,QAAL,CAAc;AAACrC,UAAAA,gBAAgB,EAAEO,IAAI,CAAC+B;AAAxB,SAAd;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAAC9B,KAAL,CAAWM,gBAAvB;AACAwB,QAAAA,IAAI,CAACO,WAAL,CAAiB,gBAAjB;AACAP,QAAAA,IAAI,CAACa,QAAL,CAAc;AAAExC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA2B,QAAAA,IAAI,CAACa,QAAL,CAAc;AAAEvC,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACA0B,QAAAA,IAAI,CAACa,QAAL,CAAc;AAAEzC,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACA4B,QAAAA,IAAI,CAACa,QAAL,CAAc;AAAE1C,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OARD;AASH,KAdL,EAeKuC,KAfL,CAeW,UAAUC,GAAV,EAAe;AAClB1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAG,CAACC,OAAhB;AACAZ,MAAAA,IAAI,CAACV,SAAL,CAAeqB,GAAG,CAACC,OAAnB;AACH,KAlBL;AAmBH;;AAILL,EAAAA,WAAW,CAACK,OAAD,EAAU;AACjB,SAAKG,KAAL,CAAWC,IAAX,CAAgB;AAAEC,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,OAAO,EAAE,iBAAhC;AAAmDC,MAAAA,MAAM,EAAEP,OAA3D;AAAoEQ,MAAAA,IAAI,EAAE;AAA1E,KAAhB;AACH;;AACD9B,EAAAA,SAAS,CAACsB,OAAD,EAAU;AACf,SAAKG,KAAL,CAAWC,IAAX,CAAgB;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,OAAO,EAAE,eAA9B;AAA+CC,MAAAA,MAAM,EAAEP,OAAvD;AAAgEQ,MAAAA,IAAI,EAAE;AAAtE,KAAhB;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAGC,EAAD,IAAQ,KAAKP,KAAL,GAAaO;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BAAsB;AAAK,UAAA,GAAG,EAAExD,cAAV;AAA0B,UAAA,GAAG,EAAC,QAA9B;AAAuC,UAAA,KAAK,EAAC,OAA7C;AAAqD,UAAA,MAAM,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKM,KAAKI,KAAL,CAAWC,SAAX,gBAAuB;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACrB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADqB,eAErB;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFqB,eAGrB;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAG,YAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAY,YAAA,EAAE,EAAC,OAAf;AAAuB,gCAAiB,YAAxC;AACY,YAAA,WAAW,EAAG,OAD1B;AAEY,YAAA,QAAQ,EAAGoD,CAAD,IAAO,KAAKV,QAAL,CAAc;AAAEtC,cAAAA,YAAY,EAAEgD,CAAC,CAACC,MAAF,CAASC;AAAzB,aAAd,CAF7B;AAGY,YAAA,QAAQ;AAHpB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAOM,KAAKvD,KAAL,CAAWE,eAAX,gBACF;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,WAAlB;AAA8B,cAAA,OAAO,EAAE,KAAKQ,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADE,GAKO,IAZb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHqB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,GAiBM,IAtBZ,EAuBM,KAAKV,KAAL,CAAWI,aAAX,gBAA2B;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCAC7B;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD6B,eAEzB;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCAEI;AAAO,YAAA,OAAO,EAAC,YAAf;AAA4B,YAAA,SAAS,EAAC,OAAtC;AAAA,sBAA+C,KAAKJ,KAAL,CAAWM;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,SAAD;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,WAAW,EAAC,iBAFhB;AAEkC,YAAA,QAAQ,MAF1C;AAGI,YAAA,QAAQ,EAAG+C,CAAD,IAAO,KAAKV,QAAL,CAAc;AAAEpC,cAAAA,cAAc,EAAE8C,CAAC,CAACC,MAAF,CAASC;AAA3B,aAAd;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJJ,eASI;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI,QAAC,QAAD;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWQ,KAFtB;AAGI,YAAA,WAAW,EAAC,kBAHhB;AAII,YAAA,QAAQ,EAAG6C,CAAD,IAAO,KAAKV,QAAL,CAAc;AAAEnC,cAAAA,KAAK,EAAE6C,CAAC,CAACC,MAAF,CAASC;AAAlB,aAAd,CAJrB;AAI+D,YAAA,UAAU,MAJzE;AAKI,YAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAiBI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAkBI;AAAO,YAAA,OAAO,EAAC,UAAf;AAA0B,YAAA,SAAS,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAmBI,QAAC,QAAD;AACI,YAAA,EAAE,EAAC,UADP;AAEI,YAAA,KAAK,EAAE,KAAKvD,KAAL,CAAWS,KAFtB;AAGI,YAAA,WAAW,EAAC,uBAHhB;AAII,YAAA,QAAQ,EAAG4C,CAAD,IAAO,KAAKV,QAAL,CAAc;AAAElC,cAAAA,KAAK,EAAE4C,CAAC,CAACC,MAAF,CAASC;AAAlB,aAAd,CAJrB;AAI+D,YAAA,UAAU,MAJzE;AAKI,YAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eA0BI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAA8B,YAAA,OAAO,EAAE,KAAK3C,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFyB;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3B,GAgCO,IAvDb;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2DH;;AApLiD","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport './style.css'\n\n\nimport { InputText } from 'primereact/inputtext';\nimport { Toast } from 'primereact/toast';\nimport { Password } from 'primereact/password';\nimport Button from '../../components/Button';\nimport logo_reference from '../../images/plantcare.png';\n\n\nexport default class forgotpassword extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            showEmail: true,\n            showEmailButton: true,\n            showSecurity: false ,\n            showResetPass: false,\n            emailAddress: '',\n            securityQuestion: '',\n            securityAnswer: '',\n            pass1: '',\n            pass2: ''\n        };\n\n        this.clickSubmitEmail = this.clickSubmitEmail.bind(this);\n        this.clickSubmitPass = this.clickSubmitPass.bind(this);\n       \n    }\n\n    clickSubmitEmail() {\n        var data = {\n            email: this.state.emailAddress,\n        };\n        console.log(\"Email is \" + this.state.emailAddress);\n        console.log(data);\n        this.verifyEmail(data);\n    }\n\n    clickSubmitPass() {\n        var data = {\n            email: this.state.emailAddress,\n            password: this.state.pass1,\n            security_answer: this.state.securityAnswer\n        };\n        console.log(data);\n\n        if (!this.state.pass1) {\n            this.showError('Password field cannot be blank');\n            return;\n        }\n        if (!this.state.pass2) {\n            this.showError('Verify password field cannot be blank');\n            return;\n        } else if (this.state.pass1 !== this.state.pass2) {\n            this.showError(\"Passwords doesn't match\");\n            return;\n        }\n        this.updatePass(data);\n        \n    }\n    updatePass(data) {\n        var request = new Request('http://localhost:4000/forgotPassword/resetpass', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        });\n\n        var that = this;\n        fetch(request)\n            .then(function (response) {\n                if (response.status === 500) throw new Error('Internal server error');\n                else if (response.status === 401) throw new Error('Security answer is incorrect');\n                else if (response.status === 404) throw new Error('Not found');\n                response.json().then(function (data) {\n                    that.showSuccess('Password is updated successfully');\n                    console.log(data);\n                    that.props.history.push(\"/Login\");\n                })\n                .catch(function (err) {\n                    console.log(err.message);\n                    that.showError(err.message);\n                });\n        })\n        .catch(function (err) {\n            console.log(err.message);\n            that.showError(err.message);\n        });\n    }\n\n    verifyEmail(data) {\n            var request = new Request('http://localhost:4000/forgotPassword/validate', {\n                method: 'POST',\n                headers: new Headers({ 'Content-Type': 'application/json' }),\n                body: JSON.stringify(data)\n            });\n            var that = this;\n            fetch(request)\n                .then(function (response) {\n                    if (response.status === 500) throw new Error('Internal server error');\n                    else if (response.status === 401) throw new Error('Email is not registered');\n                    \n                    response.json().then(function (data) {\n                        that.setState({securityQuestion: data.security_question});\n                        console.log(that.state.securityQuestion);\n                        that.showSuccess('Valid username');\n                        that.setState({ showSecurity: true })\n                        that.setState({ showResetPass: true })\n                        that.setState({ showEmailButton: false })\n                        that.setState({ showEmail: false })\n                    });\n                })\n                .catch(function (err) {\n                    console.log(err.message);\n                    that.showError(err.message);\n                });\n        }\n    \n\n\n    showSuccess(message) {\n        this.toast.show({ severity: 'success', summary: 'Success Message', detail: message, life: 3000 });\n    }\n    showError(message) {\n        this.toast.show({ severity: 'error', summary: 'Error Message', detail: message, life: 3000 });\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <Toast ref={(el) => this.toast = el} />\n                <div className='logo'><img src={logo_reference} alt=\"Plants\" width=\"170px\" height=\"60px\" /></div>\n                \n\n                { this.state.showEmail ? <div className=\"forgotpass_container\">\n                    <div className=\"image_container\"></div>\n                    <div className=\"forgot\">Forgot Password</div>\n                    <div className=\"input_container\">\n                        <p id='label_text'>Enter Your email address</p>\n                        <InputText  id=\"Email\" aria-describedby=\"Email-help\"\n                                    placeholder = \"Email\"\n                                    onChange={(e) => this.setState({ emailAddress: e.target.value })}\n                                    required/>\n                    \n                        { this.state.showEmailButton ? \n                        <div className='forgot_button_card'>\n                            <Button className='Fogot_btn' onClick={this.clickSubmitEmail}>\n                                Submit\n                            </Button >\n                        </div> : null}\n                    </div>\n                </div> :null}\n                { this.state.showResetPass ? <div className=\"resetpass_container\">\n                <div className=\"resetpass\">Reset Password</div>\n                    <div className=\"input_container\">\n\n                        <label htmlFor=\"s_question\" className=\"block\">{this.state.securityQuestion}</label>\n                        <div className=\"security_question\"></div>\n                        <InputText  \n                            id=\"username\" \n                            placeholder='Security Answer' required\n                            onChange={(e) => this.setState({ securityAnswer: e.target.value })}\n                        />\n                        <label htmlFor=\"password\" className=\"block\">Password</label>\n                        <Password\n                            id=\"password\"\n                            value={this.state.pass1}\n                            placeholder='Enter a password'\n                            onChange={(e) => this.setState({ pass1: e.target.value })} toggleMask\n                            required\n                        />\n                        <div className=\"break\"></div>\n                        <label htmlFor=\"password\" className=\"block\">Confirm Password</label>\n                        <Password\n                            id=\"password\"\n                            value={this.state.pass2}\n                            placeholder='Confirm your password'\n                            onChange={(e) => this.setState({ pass2: e.target.value })} toggleMask\n                            required\n                        />\n                        <Button className='Fogot_btn' onClick={this.clickSubmitPass}>\n                            Submit\n                        </Button >\n                    </div>\n                </div> : null}\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}